join -t $'\t' -a 1 -1 7 -2 1 <SU3803.final.vcf.annovar.hg19_multianno.led.sorted.txt <genemapR_sorted.txt > SU3803.txt


#does not sort headers

cat genemapR.txt | awk 'NR == 1; NR > 1 {print $0 | "LANG=en_EN sort -k1,1"}' > genemapR_sorted.txt

cat SU3803.final.vcf.annovar.hg19_multianno.led.txt | awk 'NR == 1; NR > 1 {print $0 | "sort -k7,7"}' > SU3803.final.vcf.annovar.hg19_multianno.led.sorted.txt

join -t $'\t' -a 1 -1 7 -2 1 SU3803.final.vcf.annovar.hg19_multianno.led.sorted.txt genemapR_sorted.txt > SU3803.txt

en 1 fois avec genemapR déjà trié

join -a 1 -t $'\t' -1 7 -2 1 <(cat SU3803.final.vcf.annovar.hg19_multianno.led.txt | awk 'NR == 1; NR > 1 {print $0 | "sort -k7,7"}') genemapR_sorted.txt > SU3803.txt

on doit réorganiser les colonnes, la 7 devient 1

awk '{k=$7; $7=""; print k"\t"$0}' SU3803.final.vcf.annovar.hg19_multianno.led.txt

donc si on mixe tout:

LANG=en_EN join -a 1 -t $'\t' -1 1 -2 1 <$(cat SU3803.final.vcf.annovar.hg19_multianno.led.txt | awk  -F\\t -v OFS='\t' '{k=$7; $7=""; print k"\t"$0}' | cut -f-7,9- | awk 'NR == 1; NR > 1 {print $0 | "sort -k1,1"}') genemapR_sorted.txt > SU3803.txt

-a 1 on garde les lignes du fichiers 1 qui ne matchent pas le fichier 2
-t $'\t' séparateur I/O
-1 1 -2 1 on trie sur les colonnes 1 et 1 de chaque fichier
#sauf que le fichier annovar vient avec la colonne gene.RefGene au numéro 7 donc
# on lit le fichier
cat SU3803.final.vcf.annovar.hg19_multianno.led.txt
# puis pipe puis
awk  -F\\t -v OFS='\t' '{k=$7; $7=""; print k"\t"$0}'
# un premier awk pour mettre la colonne 7 dans une variable; effacer la colonne 7 puis réécrire la sortie avec la colonne 7 en premier puis
cut -f-7,9- 
# cut de la colone vide resultante
awk 'NR == 1; NR > 1 {print $0 | "sort -k1,1"}'
#un 2ème awk pour garder le header et trier selon la colonne 7 devenue 1 pour que le join marche


